class Solution {
    public int maximumSum(int[] nums) {

       
        int[] mp = new int[82];
        Arrays.fill(mp, -1);
        int ans = -1;

        for (int num : nums) {
            int sumDigits = 0, temp = num;
            while (temp > 0) {
                sumDigits += temp % 10;
                temp /= 10;
            }

            if (mp[sumDigits] != -1)
                ans = Math.max(ans, num + mp[sumDigits]);

            mp[sumDigits] = Math.max(mp[sumDigits], num);
        }
        return ans;
    
        //Brute force 
    //     int n = nums.length;
    //     int ans = -1;
    //      int summ= -1;
    //     for(int i=0;i<n-1;i++){
    //         int sum = 0;
    //         int m = nums[i];
    //         while(m !=0){
    //         sum += m%10;
    //         m /=10 ;
    //         }
    //         for(int j=i+1;j<n;j++){
    //             int csum=0;
    //             int s=nums[j];
    //          while(s !=0){
    //             csum+=s%10;
    //             s /= 10;
    //          }
    //          if(sum == csum){
    //           summ = Math.max(summ,nums[i]+nums[j]); 
    //         }
    //         }
             
    //     }
    //    return Math.max(summ,ans);
    }
}
